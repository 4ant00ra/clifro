% Generated by roxygen2 (4.0.1): do not edit by hand
\name{cf_find_station}
\alias{cf_find_station}
\alias{find-cfStation}
\title{Search for Clifro Stations}
\usage{
cf_find_station(..., search = c("name", "region", "network", "latlong"),
  datatype, combine = c("all", "any"), status = c("open", "closed", "all"))
}
\arguments{
\item{...}{arguments to pass into the search, these differ depending on
\code{search}.}

\item{search}{one of \code{name}, \code{network}, \code{region} or
\code{latlong} indicating the type of search to be conducted.}

\item{datatype}{\code{cfDatatype} object for when the search is based on
datatypes.}

\item{combine}{character string \code{"all"} or \code{"any"} indicating if the
stations contain all or any of the selected datatypes for when the search is
based on datatypes.}

\item{status}{character string indicating \code{"open"}, \code{"closed"} or
\code{"all"} stations be returned by the search.}
}
\value{
\code{cfStation} object
}
\description{
Find the agent number for stations based on name, region, location or network
number.
}
\details{
The \code{cf_find_station} function is a convenience function for finding
CliFlo stations in \R. It uses the CliFlo "Find Stations" page
(\url{http://cliflo.niwa.co.nz/pls/niwp/wstn.get_stn_html}) to do the
searching meaning the stations are not stored within \pkg{clifro}.

If \code{datatype} is missing then the search is conducted
without any reference to datatypes. If it is supplied then the
search will only return stations that have any or all of the supplied
datatypes, depending on \code{combine}. The default behaviour is to searche
for stations based on pattern matching the station name and return only the
open stations.

If the \code{latlong} search type is used the function expects a named
arguments with names (partially) matching latitude,
longitude and radius. If the arguments are passed in without names they must
be in order of latitude, longitude and radius.
}
\note{
Since the searching is done by CliFlo there are obvious restrictions.
Unfortunately the pattern matching for station name does not provide
functionality for regular expressions, nor does it allow simultaneous
searches although \pkg{clifro} does provide some functionality, see
'Examples' below.
}
\examples{
\dontrun{
# Return all open stations with 'island' in the name (pattern match search)
# Note this example uses all the defaults
cf_find_station("island")

# Return all the closed stations from Queenstown (region search)
cf_find_station("queen", search = "region", status = "closed")

# Return all open stations within a 10km radius of the Beehive in Wellington
# From Wikipedia: latitude 41.2784 S, longitude 174.7767 E
cf_find_station(lat = -41.2784, long = 174.7767, rad = 10,
                search = "latlong")

# Return all stations that share A42 in their network ID (network ID search)
cf_find_station("A42", search = "network", status = "all")

# Is the Reefton EWS station open and does it collect daily rain and wind
# data? (using datatypes in the search)

# Daily rain and wind datatypes
daily.dt = cf_datatype(c(2, 3), c(1, 1), list(4, 1), c(1, NA))

cf_find_station("reefton EWS", datatype = daily.dt)      # Yes

# Return all stations sharing A42 in their network ID
\\emph{OR} all the open stations within 10km of the Beehive in Wellington
(note this is not an AND query).
cf_find_station("A42", search = "network", status = "all") +
cf_find_station(lat = -41.2784, long = 174.7767, rad = 10,
                search = "latlong")

# Note these are all ordered by open stations, then again by their end dates
}
}
\seealso{
\code{\link{cf_save_kml}}, \code{\link{cf_station}},
\code{vignette("choose-station")} and \code{vignette("cfStation")}
}

